# by Akash Maji
"""
Day-13.ipynb

Automatically generated by Colaboratory.

Original file is located at:
    https://colab.research.google.com/drive/1X7OsWVfCDc3w68HlSE7DG5oyIxOBywhq
"""

print("Hello")

# A simple example of an algorithm
# Linear Search

# [1, 3, 4, 6, 7, 9, 10]   => 5   (yes/no)


#linear-search-algo
#input -> list, num
#output-> True/False

ls = [1, 3, 4, 6, 7, 9, 10]
num = 6

#snake case
def linear_search(ls, num):
  # check for the num in ls
  for n in ls:
    if n == num:
      return True
  # num nhi mila
  return False

ans = linear_search(ls, num)
print(ans)


# two things
# size of input (ls size)
# space memory (constant)

# fast prime check
# input: n = 13
# out: true/false

# n => 1, n   => 2 factors

# 36   => 1, 2, 3, 4, 6, 9, 12, 18, 36
# 36 => 6
# 17 => 1, 17

# 2 -> 4   => 2  3  4

# 1   36/1   36
# 2   36/2   18
# 3   36/3   12


def fast_prime_check(n):
  # 1.....n
  # 2......(n**0.5)
  for i in range(2, int(n**0.5)):
    if n%i == 0:
      return False

  return True


print(fast_prime_check(42))

# 2.......sqrt(n) # fast
# n = 100 => 10 steps
