# -*- coding: utf-8 -*-
"""Untitled8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EsWNOkoRHlXVi30BA1TkuPfY-k-5nAtZ
"""

# Welcome to Day 17

# 123 =>   321
class Reverse:
    def __init__(self, num):
        self.num = num
    def do_reverse(self):

        num = self.num
        # num => int
        # 

        num_str = str(num) #int->str

        reversed = num_str[::-1]  #reverse
        return reversed

print(Reverse().do_reverse(123))

#  binary search

# array (list) => already sorted


# friends = ["rakesh", "anuj", "mohit", ......]
elem = 34
ls = [1, 4, 7, 9, 10, 11, 15, 20, 34] 
                                  
    
def binary_search(ls, elem):

    s = 0
    e = len(ls) - 1

    while True:
        m = (s + e)//2

        # m => middle point

        if ls[m] == elem:
            return True
        elif ls[m] < elem:
            s = m + 1
        else:
            e = m - 1

        if s > e:
            return False

        

print(binary_search(ls, elem))

# bubble sort


# [ 1, 3, 4, 2, 5, 10, 6] => [1, 2, 3, 4, 5, 6, 10]
    #  1 3 2 4 5 6 10    => 1 time
    #                   =  2 time
    #                   ..
    #                   ...


  
ls = [ 9, 8, 7, 6, 5, 4, 3 ]

def bubble(ls):
    n = len(ls)

    for j in range(n):

        for i in range(0, n - j):
            if i+ 1 < n and ls[i] > ls[i+1]:
                ls[i], ls[i+1] = ls[i+1], ls[i]

        print(ls)

bubble(ls)

print("sorted")
print(ls)
